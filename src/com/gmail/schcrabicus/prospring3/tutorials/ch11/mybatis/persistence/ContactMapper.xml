<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.gmail.schcrabicus.prospring3.tutorials.ch11.mybatis.persistence.ContactMapper">

    <!-- findAll -->
    <resultMap id="contactResultMap" type="Contact">
        <id column="id" property="id" />
        <result property="firstName" column="first_name" />
        <result property="lastName" column="last_name" />
        <result property="birthDate" column="birth_date" />
    </resultMap>
    
    <select id="findAll" resultMap="contactResultMap">
        SELECT id, first_name, last_name, birth_date FROM contact
    </select>

    <!-- findAllWithDetail -->
    <!--<resultMap id="contactWithDetailResultMap" type="Contact">
        <id property="id" column="id" />
        <result property="firstName" column="first_name" />
        <result property="lastName" column="last_name" />
        <result property="birthDate" column="birth_date" />
        <collection property="contactTelDetails" ofType="ContactTelDetail" column="id" select="selectContactTelDetails" />
    </resultMap>

    <resultMap id="contactTelDetailResultMap" type="ContactTelDetail" >
        <id property="id" column="id" />
        <result property="telType" column="tel_type" />
        <result property="telNumber" column="tel_number" />
    </resultMap>

    <select id="selectContactTelDetails" parameterType="long" resultMap="contactTelDetailResultMap">
        SELECT id, tel_type, tel_number FROM contact_tel_detail WHERE contact_id=#{id}
    </select>

    <select id="findAllWithDetail" resultMap="contactWithDetailResultMap">
        SELECT id, first_name, last_name, birth_date
        FROM contact
    </select>-->

    <resultMap id="contactWithDetailResultMap" type="Contact">
        <id property="id" column="id" />
        <result property="firstName" column="first_name" />
        <result property="lastName" column="last_name" />
        <result property="birthDate" column="birth_date" />
        <collection property="contactTelDetails" ofType="ContactTelDetail">
            <id property="id" column="contact_tel_id" />
            <result property="telType" column="tel_type" />
            <result property="telNumber" column="tel_number" />
        </collection>
        <collection property="hobbies" ofType="Hobby">
            <result property="hobbyId" column="hobby_id" />
        </collection>
    </resultMap>

    <select id="findAllWithDetail" resultMap="contactWithDetailResultMap">
        SELECT c.id, c.first_name, c.last_name, c.birth_date, d.id as contact_tel_id, d.tel_type, d.tel_number, h.hobby_id
        FROM contact c
        LEFT OUTER JOIN contact_tel_detail d ON d.contact_id = c.id
        LEFT OUTER JOIN contact_hobby h ON h.contact_id = c.id
    </select>

    <!-- findById -->
    <select id="findById" resultMap="contactWithDetailResultMap" parameterType="long">
        SELECT c.id, c.first_name, c.last_name, c.birth_date, d.id as contact_tel_id, d.tel_type, d.tel_number, h.hobby_id
        FROM contact c
        LEFT OUTER JOIN contact_tel_detail d ON d.contact_id = c.id
        LEFT OUTER JOIN contact_hobby h ON h.contact_id = c.id
        WHERE c.id = #{id}
    </select>

    <!-- findById -->
    <select id="findByFirstNameAndLastName" resultMap="contactWithDetailResultMap" parameterType="long">
        SELECT c.id, c.first_name, c.last_name, c.birth_date, d.id as contact_tel_id, d.tel_type, d.tel_number, h.hobby_id
        FROM contact c
        LEFT OUTER JOIN contact_tel_detail d ON d.contact_id = c.id
        LEFT OUTER JOIN contact_hobby h ON h.contact_id = c.id
        <where>
            <if test="firstName != null">
                c.first_name = #{firstName}
            </if>
            <if test="lastName != null">
                AND c.last_name = #{lastName}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="Contact" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO contact (first_name, last_name, birth_date) VALUES
        (#{firstName}, #{lastName}, #{birthDate})
    </insert>

    <update id="update" parameterType="Contact">
        UPDATE contact
        SET
        first_name = #{firstName},
        last_name = #{lastName},
        birth_date = #{birthDate}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Contact">
        DELETE FROM contact WHERE id = #{id}
    </delete>

</mapper>